{"ast":null,"code":"import React, { useMemo } from 'react';\nimport { useParams, useLocation, useHistory, useRouteMatch } from 'react-router-dom';\nimport queryString from 'query-string'; // Hook\n\nexport function useRouter() {\n  const params = useParams();\n  const location = useLocation();\n  const history = useHistory();\n  const match = useRouteMatch(); // Return our custom router object\n  // Memoize so that a new object is only returned if something changes\n\n  return useMemo(() => {\n    return {\n      // For convenience add push(), replace(), pathname at top level\n      push: history.push,\n      replace: history.replace,\n      pathname: location.pathname,\n      // Merge params and parsed query string into single \"query\" object\n      // so that they can be used interchangeably.\n      // Example: /:topic?sort=popular -> { topic: \"react\", sort: \"popular\" }\n      query: { ...queryString.parse(location.search),\n        // Convert string to object\n        ...params\n      },\n      // Include match, location, history objects so we have\n      // access to extra React Router functionality if needed.\n      match,\n      location,\n      history\n    };\n  }, [params, match, location, history]);\n}","map":{"version":3,"sources":["/Users/plebeian/Local Sites/plebeian/src/components/RouterHook.js"],"names":["React","useMemo","useParams","useLocation","useHistory","useRouteMatch","queryString","useRouter","params","location","history","match","push","replace","pathname","query","parse","search"],"mappings":"AAAA,OAAOA,KAAP,IAAeC,OAAf,QAA6B,OAA7B;AACA,SAASC,SAAT,EAAoBC,WAApB,EAAiCC,UAAjC,EAA6CC,aAA7C,QAAkE,kBAAlE;AACA,OAAOC,WAAP,MAAwB,cAAxB,C,CAEA;;AACA,OAAO,SAASC,SAAT,GAAqB;AACxB,QAAMC,MAAM,GAAGN,SAAS,EAAxB;AACA,QAAMO,QAAQ,GAAGN,WAAW,EAA5B;AACA,QAAMO,OAAO,GAAGN,UAAU,EAA1B;AACA,QAAMO,KAAK,GAAGN,aAAa,EAA3B,CAJwB,CAMxB;AACA;;AACA,SAAOJ,OAAO,CAAC,MAAM;AACnB,WAAO;AACL;AACAW,MAAAA,IAAI,EAAEF,OAAO,CAACE,IAFT;AAGLC,MAAAA,OAAO,EAAEH,OAAO,CAACG,OAHZ;AAILC,MAAAA,QAAQ,EAAEL,QAAQ,CAACK,QAJd;AAKL;AACA;AACA;AACAC,MAAAA,KAAK,EAAE,EACL,GAAGT,WAAW,CAACU,KAAZ,CAAkBP,QAAQ,CAACQ,MAA3B,CADE;AACkC;AACvC,WAAGT;AAFE,OARF;AAYL;AACA;AACAG,MAAAA,KAdK;AAeLF,MAAAA,QAfK;AAgBLC,MAAAA;AAhBK,KAAP;AAkBD,GAnBa,EAmBX,CAACF,MAAD,EAASG,KAAT,EAAgBF,QAAhB,EAA0BC,OAA1B,CAnBW,CAAd;AAoBD","sourcesContent":["import React, {useMemo} from 'react'\nimport { useParams, useLocation, useHistory, useRouteMatch } from 'react-router-dom';\nimport queryString from 'query-string';\n\n// Hook\nexport function useRouter() {\n    const params = useParams();\n    const location = useLocation();\n    const history = useHistory();\n    const match = useRouteMatch();\n  \n    // Return our custom router object\n    // Memoize so that a new object is only returned if something changes\n    return useMemo(() => {\n      return {\n        // For convenience add push(), replace(), pathname at top level\n        push: history.push,\n        replace: history.replace,\n        pathname: location.pathname,\n        // Merge params and parsed query string into single \"query\" object\n        // so that they can be used interchangeably.\n        // Example: /:topic?sort=popular -> { topic: \"react\", sort: \"popular\" }\n        query: {\n          ...queryString.parse(location.search), // Convert string to object\n          ...params\n        },\n        // Include match, location, history objects so we have\n        // access to extra React Router functionality if needed.\n        match,\n        location,\n        history\n      };\n    }, [params, match, location, history]);\n  }"]},"metadata":{},"sourceType":"module"}